name: pytest

author: GodYi

inputs:
  python-version:
    default: 3.9
    required: false
    type: string
    description: python版本
  mysql:
    default: false
    required: false
    type: boolean
  numpy:
    default: false
    required: false
    type: boolean
  aliyun:
    default: false
    required: false
    type: boolean
  codecov-token:
    required: true
    description: 上传codecov所需token
  submodules-token:
    default:
    required: false
    description: 子模型token

runs:
  using: composite
  steps:
    - if: ${{ inputs.submodules-token == '' }}
      name: 仓库获取-普通仓库
      uses: actions/checkout@v3
    - if: ${{ inputs.submodules-token != '' }}
      name: 仓库获取-子模型仓库
      uses: actions/checkout@v3
      with:
        token: ${{ inputs.submodules-token }}
        submodules: true
    - name: 安装python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: 安装pytest
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pytest-xdist pytest-timeout pytest-asyncio pytest_ordering
        python -m pip install aiofiles
    - if: ${{ inputs.mysql }}
      name: 安装mysql插件
      shell: bash
      run: python -m pip install aiomysql
    - if: ${{ inputs.numpy }}
      name: 安装numpy&torch插件
      shell: bash
      run: |
        python -m pip install numpy
        python -m pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
    - if: ${{ inputs.aliyun }}
      name: 安装阿里云相关插件
      shell: bash
      run: python -m pip install -U aliyun-log-python-sdk protobuf==3.20 oss2
    - name: 执行单元测试
      shell: bash
      run: pytest --cov-report=xml
    - name: 上传至Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        file: ./coverage.xml
        name: 单测覆盖率
        fail_ci_if_error: true
        flags: unittests
        verbose: true
    - name: 清理pytest垃圾
      shell: bash
      run: |
        rm -rf coverage.xml .coverage.*
        find . -name '.pytest_cache' | xargs rm -r
        find . -name '.coverage' | xargs rm -r
    - name: 清理python垃圾
      shell: bash
      run: find . -name '__pycache__' | xargs rm -r
